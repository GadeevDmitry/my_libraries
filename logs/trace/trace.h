/** @file */
#ifndef TRACE_H
#define TRACE_H

//================================================================================================================================
// STRUCT
//================================================================================================================================

/**
*   @brief Структура данных для определения позиции в исходных файлах.
*/
struct source_pos
{
    const char *file;   ///< имя файла
    const char *func;   ///< имя функции
    int         line;   ///< номер строки
};

/**
*   @brief Структура для трассировки стека вызовов.
*/
struct trace
{
    source_pos  front_trace;    ///< попадет в стек при следующем вызове trace_push
    source_pos *stack_trace;    ///< стек вызовов

    size_t      size;           ///< размер  .data
    size_t  capacity;           ///< емкость .data
};

//================================================================================================================================
// FUNCTION DECLARATION
//================================================================================================================================

/**
*   @brief trace ctor.
*/
bool _trace_ctor(trace *const trc);

/**
*   @brief trace dtor.
*/
void _trace_dtor(trace *const trc);

//--------------------------------------------------------------------------------------------------------------------------------

/**
*   @brief Добавляет frame в стек вызовов.
*
*   @param trc  [in][out] - trace to push the frame in
*
*   @param file [in]      - имя файла
*   @param func [in]      - имя функции
*   @param line [in]      - номер строки
*
*   @return true, если все ок, false - иначе
*/
bool _trace_push(trace *const trc);

//--------------------------------------------------------------------------------------------------------------------------------

/**
*   @brief Удаляет frame из стека вызовов.
*
*   @param trc [in][out] - trace to pop the frame from
*
*   @return true, если все ок, false - иначе
*/
bool _trace_pop(trace *const trc);

//--------------------------------------------------------------------------------------------------------------------------------

/**
*   @brief Обновляет значение для push.
*
*   @param trc  [in][out] - trace to update the front frame
*
*   @param file [in]      - имя файла
*   @param func [in]      - имя функции
*   @param line [in]      - номер строки
*/
void _trace_front_upd(trace *const trc, const char *const file,
                                        const char *const func,
                                        const int         line);

//--------------------------------------------------------------------------------------------------------------------------------

/**
*   @brief Дамп стека вызовов.
*/
void _trace_dump(const trace *const trc);

#endif // TRACE_H